
{% extends "base.html" %}
{% load i18n %}
{% load linebreakless %}{% linebreakless %}
<!--Head Title -->
{% block headtitle %}
    <TITLE>{% trans "Ausfahren - Modi" %}</TITLE>
{% endblock %}
<!--/ Head Title -->
<!-- Head CSS-->
{% block headcss %}
    <LINK rel="StyleSheet" href="../wirhlp10.css"/>
    <style title="hcp" type="text/css">
    <!--
    font.hcp1 { font-weight:bold; }
    p.hcp2 { margin-top:0;
    margin-bottom:0; }
        
        span {
                font-weight: bold;
            }
        
        .pitalic { 
            margin-top:0; 
            margin-bottom:0; 
            font-style: italic;
            color:#FF0000;
        }
    -->
    </style>
{% endblock %}
<!--/ Head CSS -->
<!-- Head JavaScript -->
{% block headjs %}
    <SCRIPT LANGUAGE="JavaScript" TITLE="BSSC Special Effects" SRC="../ehlpdhtm.js"></SCRIPT>
{% endblock %}
<!--/ Head JavaScript -->
{% block mainbody %}
    <p class="dialog">{% trans "Ausfahren Gerade" %}</p><p>{% trans "Führt zu einer linearen (geraden) Ausfahrbewegung." %}</p><p> </p>
<p class="dialog">{% trans "Ausfahren Bogen mit Eckenmodus" %}</p>
<p>{% trans "Führt zu einer [kreisförmigen tangentialen Ausfahrbewegung] an die Bearbeitungsfigur." %}</p>
<p>{% trans "Für diese Option muss man einen Ausfahrradius programmieren." %}</p>
<p>{% trans "Der Radius der Ausfahrbewegung muss kleiner sein als der Abstand zwischen der Start(loch)position und der Bearbeitungsstartposition auf der Figur und größer sein als der Drahtradius plus Offset." %}</p>
<p>{% trans "Es existieren zwei Methoden für das kreisförmige Ausfahren, nämlich:" %}</p>
<p>{% trans "[Ausfahren Bogen mit ISO] und [Ausfahren Bogen mit Eckenmodus]" %}</p>
<p>{% trans "Der [Unterschied] zwischen den Methoden wird [nur bei der Bearbeitung von Koniken] offensichtlich." %}</p>
<p>{% trans "Normalerweise verwendet man die Ausfahroption [Ausfahren Bogen mit ISO]. Sie ist auch die einzig mögliche Methode wenn man Regelflächen bogenförmig an/abfahren möchte." %}</p>
<p>{% trans "Die folgende Zeichnung zeigt die Methode [Ausfahren Bogen mit ISO]." %}</p>
<p class="hcp2"> </p>
<p><img src="../LEADISO.gif" alt="LEADISO.gif" width="283" height="179" border="0"/></p>
<p class="hcp2"> </p>
<p>{% trans "Wird die Option [Ausfahren Bogen mit Eckenmodus] aktiviert, wird je nach Einstellung des #[Eckenmodus]# im Dialog [Standard Konturbearbeitung] entweder ein ISO-Radius oder ein Drehspindelradius erzeugt." %}</p>
<p>{% trans "Die Option [Ausfahren Bogen mit Eckenmodus] ist nicht identisch mit der Ausfahroption [Ausfahren Bogen mit ISO]." %}</p>
<p class="hcp2"> </p>
<p>{% trans "[Ausfahren Bogen mit: ISO Eckenmodus]" %}</p>
<p><img src="../LEADISOC.gif" alt="LEADISOC.gif" width="279" height="176" border="0"/></p>
<p> </p>
<p>{% trans "[Ausfahren Bogen mit: Drehspindel Eckenmodus]" %}</p>
<p><img src="../LEADCONC.gif" alt="LEADCONC.gif" width="287" height="180" border="0"/></p>
<p class="hcp2"> </p>
<p>{% trans "Die oben gezeigten Ausfahrmethoden ([ISO] und [Drehspindel]) sollten man nur programmieren wenn die NC-Steuerung dies auch zulässt." %}</p>
<p>{% trans "Verwenden Sie im Zweifelsfall die Option [Ausfahren Bogen mit ISO]." %}</p>
<p>{% trans "Beachten Sie ebenfalls, dass ein bogenförmigen An/Ausfahren auf einem Radiuselement bei vielen Steuerungen zu Offsetfehlern führt." %}</p>
<p>{% trans "Fahren Sie deshalb besser auf einem geraden Element an/aus." %}</p>
<p> </p>
<p class="dialog">{% trans "Ausfahren Bogen mit ISO" %}</p>
<p>{% trans "Führt zu einer bogenförmigen Ausfahrbewegung." %}</p>
<p>{% trans "Der Draht fährt im programmierten Radius von der Bearbeitungsfigur weg. [Ist eine Konik programmiert], bildet die Ausfahrbewegung immer [einen ISO-Radius]." %}</p>
<p>{% trans "Der [Radius] der Ausfahrbewegung [muss angegeben werden]. Bei Radius 0 (Null) wird gerade weggefahren." %}</p>
<p> </p>
<script type="text/javascript" language="JavaScript1.2">//&lt;![CDATA[
	if( typeof( FilePopupInit ) != 'function' ) FilePopupInit = new Function();
	FilePopupInit('a3');
//]]&gt;</script>

{% endblock %}
{% endlinebreakless %}
